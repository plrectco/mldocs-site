{
    "docs": [
        {
            "location": "/", 
            "text": "Machine Learning and Big Data\n\n\nThis knowledge center is contributed by the data team of Wang Lab in SJTU, which is designed for internal self-learning.\nYou can find following topics in this knowledge center.", 
            "title": "Home"
        }, 
        {
            "location": "/#machine-learning-and-big-data", 
            "text": "This knowledge center is contributed by the data team of Wang Lab in SJTU, which is designed for internal self-learning.\nYou can find following topics in this knowledge center.", 
            "title": "Machine Learning and Big Data"
        }, 
        {
            "location": "/db/db/", 
            "text": "Database Basics\n\n\nKnowledge\n\n\n\n\nRelational Database and NoSQL\n\n\nMySQL\n\n\nMongoDB\n\n\n\n\nCode implementation", 
            "title": "Database Basics"
        }, 
        {
            "location": "/db/db/#database-basics", 
            "text": "", 
            "title": "Database Basics"
        }, 
        {
            "location": "/db/db/#knowledge", 
            "text": "Relational Database and NoSQL  MySQL  MongoDB", 
            "title": "Knowledge"
        }, 
        {
            "location": "/db/db/#code-implementation", 
            "text": "", 
            "title": "Code implementation"
        }, 
        {
            "location": "/preprocess/data_preprocessing/", 
            "text": "Data Preprocessing\n\n\nKnowledge\n\n\n\n\nOverview\n\n\nData Cleaning\n\n\nData Integration\n\n\nData Reduction\n\n\n\n\nCode implementation", 
            "title": "Data Preprocessing"
        }, 
        {
            "location": "/preprocess/data_preprocessing/#data-preprocessing", 
            "text": "", 
            "title": "Data Preprocessing"
        }, 
        {
            "location": "/preprocess/data_preprocessing/#knowledge", 
            "text": "Overview  Data Cleaning  Data Integration  Data Reduction", 
            "title": "Knowledge"
        }, 
        {
            "location": "/preprocess/data_preprocessing/#code-implementation", 
            "text": "", 
            "title": "Code implementation"
        }, 
        {
            "location": "/algorithm/algorithm/", 
            "text": "Machine Learning Algorithm\n\n\nKnowledge\n\n\nPart 1: Introduction and Basics\n\n\n\n\nWhat is learning\n\n\nThe Categories of Machine Learning\n\n\nCapacity, Overfitting, Underfitting\n\n\nRegularization\n\n\nStochastic Gradient Descent\n\n\nBias and Variance\n\n\n\n\nPart 2: Supervised Learning\n\n\n\n\nSupport Vector Machine\n\n\nNeural Networks\n\n\nDecision Tree\n\n\nRandom Forests\n\n\nAdaBoost\n\n\n\n\nPart 3: Unsupervised Learning\n\n\n\n\nPrincipal Components Analysis\n\n\nK-means Clustering\n\n\nAuto-Encoder\n\n\nCompressive Sensing\n\n\n\n\nPart 4: Semi-supervised Learning\n\n\n\n\nSelf-Training\n\n\nGenerative Models\n\n\nTransductive SVMs\n\n\nGraph-based Algorithm\n\n\nMulti-view Algorithm\n\n\n\n\nPart 5: Reinforcement Learning\n\n\n\n\nBackground: Markov Decision Process\n\n\nReinforcement Learning: Actor Critic\n\n\nReinforcement Learning: Q-Learning\n\n\n\n\nPart 6: Deep Learning\n\n\n\n\nIntuition\n\n\nConvolutional  Neural Network\n\n\nRecurrent and Recursive Nets\n\n\n\n\nPart 7: More Topics\n\n\n\n\nHow to Choose\n\n\nThe history of RBF\n\n\n\n\nCode Implementation", 
            "title": "Algorithm"
        }, 
        {
            "location": "/algorithm/algorithm/#machine-learning-algorithm", 
            "text": "", 
            "title": "Machine Learning Algorithm"
        }, 
        {
            "location": "/algorithm/algorithm/#knowledge", 
            "text": "", 
            "title": "Knowledge"
        }, 
        {
            "location": "/algorithm/algorithm/#part-1-introduction-and-basics", 
            "text": "What is learning  The Categories of Machine Learning  Capacity, Overfitting, Underfitting  Regularization  Stochastic Gradient Descent  Bias and Variance", 
            "title": "Part 1: Introduction and Basics"
        }, 
        {
            "location": "/algorithm/algorithm/#part-2-supervised-learning", 
            "text": "Support Vector Machine  Neural Networks  Decision Tree  Random Forests  AdaBoost", 
            "title": "Part 2: Supervised Learning"
        }, 
        {
            "location": "/algorithm/algorithm/#part-3-unsupervised-learning", 
            "text": "Principal Components Analysis  K-means Clustering  Auto-Encoder  Compressive Sensing", 
            "title": "Part 3: Unsupervised Learning"
        }, 
        {
            "location": "/algorithm/algorithm/#part-4-semi-supervised-learning", 
            "text": "Self-Training  Generative Models  Transductive SVMs  Graph-based Algorithm  Multi-view Algorithm", 
            "title": "Part 4: Semi-supervised Learning"
        }, 
        {
            "location": "/algorithm/algorithm/#part-5-reinforcement-learning", 
            "text": "Background: Markov Decision Process  Reinforcement Learning: Actor Critic  Reinforcement Learning: Q-Learning", 
            "title": "Part 5: Reinforcement Learning"
        }, 
        {
            "location": "/algorithm/algorithm/#part-6-deep-learning", 
            "text": "Intuition  Convolutional  Neural Network  Recurrent and Recursive Nets", 
            "title": "Part 6: Deep Learning"
        }, 
        {
            "location": "/algorithm/algorithm/#part-7-more-topics", 
            "text": "How to Choose  The history of RBF", 
            "title": "Part 7: More Topics"
        }, 
        {
            "location": "/algorithm/algorithm/#code-implementation", 
            "text": "", 
            "title": "Code Implementation"
        }, 
        {
            "location": "/framework/framework/", 
            "text": "Machine Learning Library and Framework\uff1a\n\n\n What is a Machine Learning Framework and why do we need it? \n\n\nMachine learning engineers are part of the engineering team who build the product and the algorithms, making sure that it works reliably, quickly, and at-scale. However, to implement a machine learning algorithm, we usually need to deal with:\n\n    +Large scale size of data\n    +Complex mathematical computation\n\nMachine Learning Frameworks and relative libraries help us deal with such issues and make the implementation much easier.\n\n\n\n Some Popular Machine Learning Framework: \n\n\n+Caffe\n    Caffe is a deep learning framework made with expression, speed, and modularity in mind. It is developed by the Berkeley Vision and Learning Center (BVLC) and by community contributors. Yangqing Jia created the project during his PhD at UC Berkeley. Caffe is released under the BSD 2-Clause license.  Models and optimization are defined by configuration without hard-coding \n user can switch between CPU and GPU. Speed makes Caffe perfect for research experiments and industry deployment. Caffe can process over 60M images per day with a single NVIDIA K40 GPU.\n    detailed information can be found on its official website:  https://caffe.berkeleyvision.org\n\n+Torch\n    Torch is a scientific computing framework with wide support for machine learning algorithms that puts GPUs first. It is easy to use and efficient, thanks to an easy and fast scripting language, LuaJIT, and an underlying C/CUDA implementation. The goal of Torch is to have maximum flexibility and speed in building your scientific algorithms while making the process extremely simple. Torch comes with a large ecosystem of community-driven packages in machine learning, computer vision, signal processing, parallel processing, image, video, audio and networking among others, and builds on top of the Lua community.\n    detailed information can be found on its official website:  https://torch.cn\n\n+Tensorflow\n    TensorFlow is an open source software library for numerical computation using data flow graphs. TensorFlow implements what are called data flow graphs, where batches of data (\u201ctensors\u201d) can be processed by a series of algorithms described by a graph. The movements of the data through the system are called \u201cflows\u201d \u2014 hence, the name. Graphs can be assembled with C++ or Python and can be processed on CPUs or GPUs.\n    detailed information can be found on its official website:  https://www.tensorflow.org", 
            "title": "Machine Learning Framework"
        }, 
        {
            "location": "/framework/framework/#machine-learning-library-and-framework", 
            "text": "What is a Machine Learning Framework and why do we need it?   Machine learning engineers are part of the engineering team who build the product and the algorithms, making sure that it works reliably, quickly, and at-scale. However, to implement a machine learning algorithm, we usually need to deal with:\n\n    +Large scale size of data\n    +Complex mathematical computation\n\nMachine Learning Frameworks and relative libraries help us deal with such issues and make the implementation much easier.   Some Popular Machine Learning Framework:   +Caffe\n    Caffe is a deep learning framework made with expression, speed, and modularity in mind. It is developed by the Berkeley Vision and Learning Center (BVLC) and by community contributors. Yangqing Jia created the project during his PhD at UC Berkeley. Caffe is released under the BSD 2-Clause license.  Models and optimization are defined by configuration without hard-coding   user can switch between CPU and GPU. Speed makes Caffe perfect for research experiments and industry deployment. Caffe can process over 60M images per day with a single NVIDIA K40 GPU.\n    detailed information can be found on its official website:  https://caffe.berkeleyvision.org\n\n+Torch\n    Torch is a scientific computing framework with wide support for machine learning algorithms that puts GPUs first. It is easy to use and efficient, thanks to an easy and fast scripting language, LuaJIT, and an underlying C/CUDA implementation. The goal of Torch is to have maximum flexibility and speed in building your scientific algorithms while making the process extremely simple. Torch comes with a large ecosystem of community-driven packages in machine learning, computer vision, signal processing, parallel processing, image, video, audio and networking among others, and builds on top of the Lua community.\n    detailed information can be found on its official website:  https://torch.cn\n\n+Tensorflow\n    TensorFlow is an open source software library for numerical computation using data flow graphs. TensorFlow implements what are called data flow graphs, where batches of data (\u201ctensors\u201d) can be processed by a series of algorithms described by a graph. The movements of the data through the system are called \u201cflows\u201d \u2014 hence, the name. Graphs can be assembled with C++ or Python and can be processed on CPUs or GPUs.\n    detailed information can be found on its official website:  https://www.tensorflow.org", 
            "title": "Machine Learning Library and Framework\uff1a"
        }, 
        {
            "location": "/bigdata/bigdata/", 
            "text": "", 
            "title": "Big Data"
        }
    ]
}